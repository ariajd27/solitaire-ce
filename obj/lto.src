	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_initCardSprites
_initCardSprites:
	ld	hl, (_PATCEGFX_appvar+75)
	ld	(_faceSprites), hl
	ld	hl, (_PATCEGFX_appvar+99)
	ld	(_faceSprites+3), hl
	ld	hl, (_PATCEGFX_appvar+87)
	ld	(_faceSprites+6), hl
	ld	hl, (_PATCEGFX_appvar+69)
	ld	(_faceSprites+9), hl
	ld	hl, (_PATCEGFX_appvar+93)
	ld	(_faceSprites+12), hl
	ld	hl, (_PATCEGFX_appvar+81)
	ld	(_faceSprites+15), hl
	ld	hl, (_PATCEGFX_appvar+72)
	ld	(_faceSprites+18), hl
	ld	hl, (_PATCEGFX_appvar+96)
	ld	(_faceSprites+21), hl
	ld	hl, (_PATCEGFX_appvar+84)
	ld	(_faceSprites+24), hl
	ld	hl, (_PATCEGFX_appvar+78)
	ld	(_faceSprites+27), hl
	ld	hl, (_PATCEGFX_appvar+102)
	ld	(_faceSprites+30), hl
	ld	hl, (_PATCEGFX_appvar+90)
	ld	(_faceSprites+33), hl
	ld	hl, (_PATCEGFX_appvar+39)
	ld	(_digitSprites+3), hl
	ld	hl, (_PATCEGFX_appvar+66)
	ld	(_digitSprites+6), hl
	ld	hl, (_PATCEGFX_appvar+63)
	ld	(_digitSprites+9), hl
	ld	hl, (_PATCEGFX_appvar+48)
	ld	(_digitSprites+12), hl
	ld	hl, (_PATCEGFX_appvar+45)
	ld	(_digitSprites+15), hl
	ld	hl, (_PATCEGFX_appvar+57)
	ld	(_digitSprites+18), hl
	ld	hl, (_PATCEGFX_appvar+54)
	ld	(_digitSprites+21), hl
	ld	hl, (_PATCEGFX_appvar+42)
	ld	(_digitSprites+24), hl
	ld	hl, (_PATCEGFX_appvar+51)
	ld	(_digitSprites+27), hl
	ld	hl, (_PATCEGFX_appvar+60)
	ld	(_digitSprites+30), hl
	ld	hl, (_PATCEGFX_appvar+21)
	ld	(_aceSprites), hl
	ld	hl, (_PATCEGFX_appvar+3)
	ld	(_aceSprites+3), hl
	ld	hl, (_PATCEGFX_appvar+12)
	ld	(_aceSprites+6), hl
	ld	hl, (_PATCEGFX_appvar+30)
	ld	(_aceSprites+9), hl
	ld	hl, (_PATCEGFX_appvar+27)
	ld	(_smallSymbols), hl
	ld	hl, (_PATCEGFX_appvar+9)
	ld	(_smallSymbols+3), hl
	ld	hl, (_PATCEGFX_appvar+18)
	ld	(_smallSymbols+6), hl
	ld	hl, (_PATCEGFX_appvar+36)
	ld	(_smallSymbols+9), hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawCard
_drawCard:
	ld	hl, -82
	call	__frameset
	lea	hl, ix - 22
	ld	(ix - 67), hl
	lea	hl, ix - 44
	ld	(ix - 82), hl
	lea	hl, ix - 58
	ld	(ix - 79), hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	ld	de, 45
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 9)
	ld	(ix - 64), hl
	ld	(ix - 61), hl
	ld	bc, 0
BB1_1:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_7
	ld	(ix - 70), de
	ex	de, hl
	ld	de, -43
	add	hl, de
	ld	(ix - 76), hl
	push	bc
	pop	iy
	ld	de, 214
	add	iy, de
	push	bc
	pop	hl
	ld	de, 43
	or	a, a
	sbc	hl, de
	jr	nc, BB1_4
	ld	iy, 0
BB1_4:
	ld	(ix - 73), bc
	push	bc
	pop	hl
	ld	de, 2
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 76)
	jr	c, BB1_6
	lea	hl, iy
BB1_6:
	ld	bc, 255
	call	__iand
	ld	de, (ix + 6)
	push	hl
	pop	iy
	add	iy, de
	ld	bc, -2
	call	__imulu
	ld	de, 33
	add	hl, de
	push	hl
	ld	hl, (ix - 61)
	push	hl
	push	iy
	call	_gfx_HorizLine
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 73)
	inc	bc
	ld	de, (ix - 70)
	dec	de
	ld	hl, (ix - 61)
	inc	hl
	ld	(ix - 61), hl
	jr	BB1_1
BB1_7:
	ld	e, (ix + 12)
	bit	1, e
	ld	iy, (ix + 6)
	jr	nz, BB1_9
	ld	de, (_PATCEGFX_appvar+105)
	ld	hl, 2
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (ix - 64)
	add	hl, bc
	push	hl
	push	iy
	push	de
	jp	BB1_18
BB1_9:
	ld	a, e
	cp	a, -80
	jr	c, BB1_11
	ld	a, e
	ld	b, 4
	call	__bshru
	ld	l, a
	ld	a, e
	ld	b, 2
	call	__bshru
	and	a, 3
	ld	e, 3
	ld	d, a
	mlt	de
	ld	a, e
	add	a, l
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, -11
	add	hl, de
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _faceSprites
	add	hl, de
	ld	de, (hl)
	ld	hl, 3
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (ix - 64)
	add	hl, bc
	push	hl
	push	iy
	push	de
	call	_gfx_RLETSprite
	jp	BB1_19
BB1_11:
	ld	de, (ix - 67)
	ld	hl, ___const.drawCard.digitInverse_data
	ld	iy, 22
	lea	bc, iy
	ldir
	ld	de, (ix - 82)
	ld	hl, ___const.drawCard.digitInverse_data
	lea	bc, iy
	ldir
	ld	a, (ix + 12)
	ld	b, 4
	call	__bshru
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	hl, _digitSprites
	add	hl, de
	ld	iy, (hl)
	ld	a, (ix + 12)
	ld	b, 2
	call	__bshru
	and	a, c
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix - 61), hl
	ld	de, 22
	ld	bc, 2
BB1_12:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	z, BB1_16
	lea	hl, iy
	add	hl, bc
	ld	a, (hl)
	or	a, a
	ld	a, 0
	jr	z, BB1_15
	ld	hl, _suitColors
	ld	(ix - 70), iy
	push	de
	pop	iy
	ld	de, (ix - 61)
	add	hl, de
	lea	de, iy
	ld	iy, (ix - 70)
	ld	a, (hl)
BB1_15:
	ld	hl, (ix - 67)
	add	hl, bc
	ld	(hl), a
	inc	bc
	jr	BB1_12
BB1_16:
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 67)
	push	hl
	call	_gfx_RotateSpriteHalf
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, 2
	add	iy, de
	ld	hl, (ix - 64)
	inc	de
	add	hl, de
	push	hl
	push	iy
	ld	hl, (ix - 67)
	push	hl
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, 26
	add	iy, de
	ld	hl, (ix - 64)
	ld	de, 38
	add	hl, de
	push	hl
	push	iy
	ld	hl, (ix - 82)
	push	hl
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 79)
	ld	hl, ___const.drawCard.symbolInverse_data
	ld	bc, 14
	ldir
	ld	bc, 3
	ld	hl, (ix - 61)
	call	__imulu
	push	hl
	pop	de
	ld	hl, _smallSymbols
	add	hl, de
	ld	(ix - 67), hl
	ld	bc, (hl)
	ld	de, (ix - 79)
	push	de
	push	bc
	call	_gfx_RotateSpriteHalf
	pop	hl
	pop	hl
	ld	hl, (ix - 67)
	ld	de, (hl)
	ld	iy, (ix + 6)
	ld	bc, 3
	add	iy, bc
	ld	hl, (ix - 64)
	ld	bc, 8
	add	hl, bc
	push	hl
	push	iy
	push	de
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, 22
	add	iy, de
	ld	hl, (ix - 64)
	ld	de, 33
	add	hl, de
	push	hl
	push	iy
	ld	hl, (ix - 79)
	push	hl
	call	_gfx_Sprite
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix + 12)
	and	a, -16
	cp	a, 16
	jr	nz, BB1_20
	ld	bc, 3
	ld	hl, (ix - 61)
	call	__imulu
	push	hl
	pop	de
	ld	hl, _aceSprites
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 61), hl
	ld	de, 11
	ld	iy, (ix + 6)
	add	iy, de
	ld	de, 17
	ld	hl, (ix - 64)
	add	hl, de
	push	hl
	push	iy
	ld	hl, (ix - 61)
	push	hl
BB1_18:
	call	_gfx_Sprite
BB1_19:
	pop	hl
	pop	hl
	pop	hl
BB1_20:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawPattern
_drawPattern:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_calculation_setup
_calculation_setup:
	ld	hl, -19
	call	__frameset
	ld	hl, 9
	push	hl
	call	_callocStacks
	pop	hl
	or	a, a
	jp	nz, BB3_8
	ld	hl, 27
	ld	de, 48
	ld	iy, (_stacks)
	ld	(iy), d
	ld	(iy + 1), hl
	ld	(iy + 4), 25
	push	de
	push	iy
	call	_callocCards
	pop	hl
	pop	hl
	or	a, a
	jp	nz, BB3_8
	ld	a, 16
	ld	(ix - 4), a
	ld	iy, 87
	ld	hl, 239
	ld	(ix - 16), hl
	ld	hl, 18
	ld	(ix - 3), hl
	ld	de, 55
	ld	bc, 0
	lea	hl, iy
BB3_3:
	ld	(ix - 10), iy
	ld	(ix - 13), bc
	push	bc
	pop	iy
	ld	bc, 11
	add	iy, bc
	ld	bc, 38
	add	hl, bc
	ld	(ix - 7), hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB3_5
	ld	(ix - 19), iy
	ld	iy, (_stacks)
	ld	de, (ix - 13)
	add	iy, de
	ld	(iy + 11), 2
	ld	hl, (ix - 10)
	ld	(iy + 12), hl
	ld	(iy + 15), 25
	ld	hl, 48
	push	hl
	pea	iy + 11
	call	_callocCards
	pop	hl
	pop	hl
	or	a, a
	ld	hl, (ix - 7)
	push	hl
	pop	iy
	ld	bc, (ix - 19)
	ld	de, 55
	jr	nz, BB3_8
	jr	BB3_3
BB3_5:
	ld	iy, 239
	ld	bc, 0
BB3_6:
	push	bc
	pop	hl
	ld	de, 11
	add	hl, de
	ld	de, 38
	add	iy, de
	ld	(ix - 7), iy
	ld	(ix - 10), hl
	ld	de, 55
	or	a, a
	sbc	hl, de
	jr	z, BB3_10
	ld	iy, (_stacks)
	add	iy, bc
	ld	(iy + 55), 4
	ld	hl, (ix - 16)
	ld	(iy + 56), hl
	ld	(iy + 59), 65
	ld	(iy + 61), 11
	ld	hl, 13
	push	hl
	pea	iy + 55
	call	_callocCards
	pop	hl
	pop	hl
	or	a, a
	ld	iy, (ix - 7)
	ld	(ix - 16), iy
	ld	bc, (ix - 10)
	jr	z, BB3_6
BB3_8:
	ld	a, 1
BB3_9:
	ld	sp, ix
	pop	ix
	ret
BB3_10:
	ld	de, 62
BB3_11:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	jr	z, BB3_13
	ld	hl, (_stacks)
	ld	de, (ix - 3)
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 7), hl
	ld	a, (hl)
	and	a, 12
	or	a, (ix - 4)
	or	a, 3
	ld	(hl), a
	call	_rand
	ld	iy, (ix - 7)
	ld	e, (iy)
	ld	a, l
	ld	b, 2
	call	__bshl
	and	a, 12
	ld	l, a
	ld	a, e
	and	a, -13
	ld	e, a
	ld	a, l
	add	a, e
	ld	hl, (ix - 7)
	ld	(hl), a
	ld	de, 11
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 62
	ld	a, (ix - 4)
	add	a, 16
	ld	(ix - 4), a
	jr	BB3_11
BB3_13:
	ld	bc, 14
	ld	de, 1
BB3_14:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB3_24
	ld	a, e
	ld	b, 4
	call	__bshl
	ld	(ix - 4), a
	ld	iyl, 0
BB3_16:
	ld	a, iyl
	cp	a, 4
	jp	z, BB3_23
	push	de
	pop	hl
	ld	bc, 5
	or	a, a
	sbc	hl, bc
	jr	nc, BB3_19
	ld	a, iyl
	ld	iy, (_stacks)
	push	de
	pop	hl
	ld	bc, 11
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	add	iy, de
	push	bc
	pop	de
	ld	hl, (iy + 7)
	ld	iyl, a
	ld	a, (hl)
	ld	b, 2
	call	__bshru
	and	a, 3
	cp	a, iyl
	jr	z, BB3_22
BB3_19:
	push	af
	ld	a, iyl
	ld	(ix - 10), a
	pop	af
	ld	(ix - 7), de
BB3_20:
	ld	iy, (_stacks)
	ld	hl, (iy + 7)
	ld	(ix - 3), hl
	call	_rand
	ld	bc, 48
	call	__irems
	push	hl
	pop	de
	ld	hl, (ix - 3)
	add	hl, de
	ld	a, (hl)
	and	a, 1
	bit	0, a
	jr	nz, BB3_20
	push	af
	ld	a, (ix - 10)
	ld	iyl, a
	pop	af
	ld	a, iyl
	ld	b, 2
	call	__bshl
	and	a, 12
	add	a, (ix - 4)
	inc	a
	ld	(hl), a
	ld	de, (ix - 7)
BB3_22:
	inc	iyl
	jp	BB3_16
BB3_23:
	inc	de
	ld	bc, 14
	jp	BB3_14
BB3_24:
	xor	a, a
	jp	BB3_9
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_freecell_setup
_freecell_setup:
	ld	hl, 16
	push	hl
	call	_callocStacks
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_PATCEGFX_init
_PATCEGFX_init:
	ld	hl, -6
	call	__frameset
	ld	hl, _.str
	ld	de, _.str.1
	push	de
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	or	a, a
	ld	a, 0
	jr	z, BB5_5
	ld	(ix - 3), de
	push	de
	call	_ti_GetDataPtr
	pop	de
	ld	de, (_PATCEGFX_appvar)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	ld	de, 108
	ld	iy, 0
BB5_2:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB5_4
	lea	bc, iy
	lea	de, iy
	ld	iy, _PATCEGFX_appvar
	add	iy, bc
	ld	hl, (iy)
	ld	bc, (ix - 6)
	add	hl, bc
	ld	(iy), hl
	push	de
	pop	iy
	ld	de, 3
	add	iy, de
	ld	de, 108
	jr	BB5_2
BB5_4:
	ld	hl, (ix - 3)
	push	hl
	call	_ti_Close
	pop	hl
	ld	a, 1
BB5_5:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawBackground
_drawBackground:
	ld	hl, 2
	push	hl
	call	_gfx_FillScreen
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 15
	push	hl
	ld	hl, 320
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawGame
_drawGame:
	ld	hl, -3
	call	__frameset
	call	_drawBackground
	ld	e, 0
BB7_1:
	ld	a, (_numStacks)
	ld	l, a
	ld	a, e
	cp	a, l
	jr	nc, BB7_3
	push	de
	ld	(ix - 3), de
	call	_drawStack
	ld	de, (ix - 3)
	pop	hl
	inc	e
	jr	BB7_1
BB7_3:
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	call	_PATCEGFX_init
	call	_initCardSprites
	call	_gfx_Begin
	ld	hl, (_PATCEGFX_appvar)
	ld	de, 0
	push	de
	ld	de, 22
	push	de
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, (_setup)
	call	__indcallhl
	call	_drawGame
BB8_1:
	call	_kb_AnyKey
	or	a, a
	jr	z, BB8_1
	call	_freeStacks
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_callocStacks
_callocStacks:
	call	__frameset0
	ld	a, (ix + 6)
	ld	hl, 11
	ld	(_numStacks), a
	ld	de, 0
	ld	e, a
	push	hl
	push	de
	call	_calloc
	pop	de
	pop	de
	ld	(_stacks), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB9_2
	ld	a, 0
	jr	BB9_3
BB9_2:
	ld	a, 1
BB9_3:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_callocCards
_callocCards:
	call	__frameset0
	ld	hl, 1
	ld	de, 0
	ld	e, (ix + 9)
	push	hl
	push	de
	call	_calloc
	pop	de
	pop	de
	ld	iy, (ix + 6)
	ld	(iy + 7), hl
	ld	a, (ix + 9)
	ld	(iy + 10), a
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB10_2
	ld	a, 0
	jr	BB10_3
BB10_2:
	ld	a, 1
BB10_3:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_freeStacks
_freeStacks:
	ld	hl, -3
	call	__frameset
	ld	de, (_stacks)
	ld	bc, 11
	push	de
	pop	iy
BB11_1:
	ld	a, (_numStacks)
	or	a, a
	sbc	hl, hl
	ld	l, a
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	hl
	add	hl, bc
	lea	bc, iy
	or	a, a
	sbc	hl, bc
	jr	c, BB11_3
	ld	hl, (iy + 7)
	push	hl
	ld	(ix - 3), iy
	call	_free
	ld	iy, (ix - 3)
	ld	bc, 11
	pop	hl
	ld	de, (_stacks)
	lea	iy, iy + 121
	jr	BB11_1
BB11_3:
	push	de
	call	_free
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawStack
_drawStack:
	ld	hl, -20
	call	__frameset
	ld	l, 0
	ld	(ix - 11), hl
	ld	de, (_stacks)
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	bc, 11
	ld	(ix - 8), hl
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	iy
	add	iy, bc
	ld	(ix - 14), iy
	ld	a, (iy + 5)
	push	de
	pop	iy
	or	a, a
	jp	nz, BB12_6
	ld	bc, 11
	ld	hl, (ix - 8)
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 5), iy
	ld	iy, (ix - 5)
	add	iy, de
	ld	a, (iy + 6)
	ld	iy, (ix - 5)
	or	a, a
	jr	nz, BB12_6
	lea	hl, ix - 1
	ld	(ix - 17), hl
	ld	bc, 11
	ld	hl, (ix - 8)
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 5)
	add	iy, de
	ld	l, (iy + 10)
	ld	bc, (iy + 7)
	ld	(ix - 20), bc
BB12_3:
	ld	de, 0
	ld	e, l
	push	bc
	pop	iy
	add	iy, de
	ld	a, (iy)
	ld	(ix - 1), a
	and	a, 1
	bit	0, a
	jr	nz, BB12_5
	dec	l
	ld	a, l
	cp	a, -1
	ld	iy, (ix - 5)
	ld	bc, (ix - 20)
	jr	nz, BB12_3
	jr	BB12_6
BB12_5:
	ld	de, 11
	ld	hl, (ix - 8)
	push	de
	pop	bc
	call	__imulu
	push	hl
	pop	de
	ld	iy, (ix - 5)
	add	iy, de
	ld	bc, (iy + 1)
	ld	a, (iy + 4)
	push	de
	ld	iy, 0
	add	iy, sp
	ld	hl, (ix - 17)
	ld	e, (hl)
	ld	(iy), e
	ld	l, a
	push	hl
	push	bc
	call	_drawCard
	ld	iy, (ix - 5)
	pop	hl
	pop	hl
	pop	hl
BB12_6:
	lea	hl, ix - 2
	ld	(ix - 17), hl
	ld	bc, 11
	ld	hl, (ix - 8)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, 0
BB12_7:
	ld	de, 0
	ld	e, (iy + 10)
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	nc, BB12_10
	ld	hl, (iy + 7)
	add	hl, bc
	ld	a, (hl)
	ld	(ix - 2), a
	and	a, 1
	bit	0, a
	jr	z, BB12_10
	ld	de, (iy + 1)
	ld	(ix - 5), iy
	ld	iy, (ix - 14)
	ld	a, (iy + 5)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	(ix - 8), bc
	push	hl
	pop	bc
	ld	c, a
	ld	hl, (ix - 8)
	call	__imulu
	add	hl, de
	ld	de, (ix - 11)
	ld	iy, (ix - 5)
	ld	d, (iy + 6)
	ld	(ix - 11), de
	mlt	de
	ld	a, e
	add	a, (iy + 4)
	ld	e, a
	push	bc
	push	hl
	ld	hl, 3
	add	hl, sp
	ex	(sp), hl
	pop	bc
	ld	iy, (ix - 17)
	ld	a, (iy)
	push	bc
	pop	iy
	ld	(iy), a
	push	de
	push	hl
	call	_drawCard
	ld	iy, (ix - 5)
	ld	bc, (ix - 8)
	pop	hl
	pop	hl
	pop	hl
	inc	bc
	ld	hl, (ix - 11)
	inc	l
	ld	(ix - 11), hl
	jr	BB12_7
BB12_10:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_faceSprites
_faceSprites:
	rb	36

	section	.bss,"aw",@nobits
	public	_digitSprites
_digitSprites:
	rb	33

	section	.bss,"aw",@nobits
	public	_aceSprites
_aceSprites:
	rb	12

	section	.bss,"aw",@nobits
	public	_smallSymbols
_smallSymbols:
	rb	12

	section	.rodata,"a",@progbits
	private	___const.drawCard.digitInverse_data
___const.drawCard.digitInverse_data:
	db	5
	db	4
	db	20 dup 0

	section	.rodata,"a",@progbits
	private	___const.drawCard.symbolInverse_data
___const.drawCard.symbolInverse_data:
	db	3
	db	4
	db	12 dup 0

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"PATCEGFX", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"r", 0

	section	.rodata,"a",@progbits
	public	_suitColors
_suitColors:
	db	""

	section	.data,"aw",@progbits
	public	_PATCEGFX_appvar
_PATCEGFX_appvar:
	dl	0
	dl	22
	dl	200
	dl	242
	dl	276
	dl	454
	dl	496
	dl	530
	dl	708
	dl	750
	dl	784
	dl	962
	dl	1004
	dl	1038
	dl	1060
	dl	1082
	dl	1104
	dl	1126
	dl	1148
	dl	1170
	dl	1192
	dl	1214
	dl	1236
	dl	1258
	dl	2175
	dl	3129
	dl	4065
	dl	4973
	dl	5921
	dl	6891
	dl	7880
	dl	8821
	dl	9781
	dl	10718
	dl	11684
	dl	12639

	section	.data,"aw",@progbits
	public	_setup
_setup:
	dl	_calculation_setup
	dl	_freecell_setup

	section	.bss,"aw",@nobits
	public	_numStacks
_numStacks:
	rb	1

	section	.bss,"aw",@nobits
	public	_stacks
_stacks:
	rb	3

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	__Unwind_SjLj_Register
	extern	_gfx_RLETSprite
	extern	__frameset
	extern	_srand
	extern	_kb_AnyKey
	extern	_gfx_Begin
	extern	__indcallhl
	extern	_gfx_SetPalette
	extern	_rand
	extern	_ti_Close
	extern	_gfx_HorizLine
	extern	_gfx_RotateSpriteHalf
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	__iand
	extern	__irems
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_Sprite
	extern	_ti_Open
	extern	__bshl
	extern	_ti_GetDataPtr
	extern	_calloc
	extern	_free
	extern	__bshru
	extern	_gfx_End
	extern	__frameset0
